
//Интерфейс который будут реализовывать классы, совершающие сетевые запросы. Возвращать будут сырую строку
//Добавлять новые методы планирую при помощи механизма расширения интерфейсов
export interface NetGetRequester {
    getRequest(url: string): Promise<string>;
}

//Интерфейс-дженерик для парсеров. Дженерик нужн для того чтобы для каждого парсера не создавать свой интерфейс.
//Классы, реализующие данные интерфейс будут получать строку, парсить ее и приводить к типу. Далее в зависимости
// от результата будет возвращаться массив данных
// Если данные не распарсились или проверка на тип была неуспешна - возвращается пустой массив
export interface Parser<T> {
    parse(rawData: string): T[];
}

//Также общий интерфейс для классов, которые будут содержать логику фильтрации.
//Принимает массив данных какого-то типа, возвращает массив данных того же типа.
export interface Filter<T> {
    filter(data: T[]): T[]
}